# syntax=docker/dockerfile:1
# Dockerfile to build the Synapse utility to compress state in a Postgres DB
# and to build the postgres metrics exporter from the Prometheus community
#
# Note that it uses features which are only available in BuildKit - see
# https://docs.docker.com/go/buildkit/ for more information.
#
# To build the image, run `docker build` command from the same folder as
# the dockerfile.
#
#    DOCKER_BUILDKIT=1 docker build -f Dockerfile-deb .
#
###
#     Stage 1: state compressor: Install cargo, a golang compiler
###

FROM docker.io/rust:slim-bullseye as builder-SC

WORKDIR /opt/synapse_tools

RUN \
   --mount=type=cache,target=/var/cache/apt,sharing=locked \
   --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update -qq && apt-get install -yqq \
      git libssl-dev make pkg-config python3 \
    && rm -rf /var/lib/apt/lists/*

RUN git clone --depth 1 https://github.com/matrix-org/rust-synapse-compress-state.git .

RUN \
    --mount=type=cache,target=/usr/local/cargo/registry \
    RUSTFLAGS="-C target-feature=-crt-static" cargo install --path .

WORKDIR /opt/synapse_tools/synapse_auto_compressor

RUN \
    --mount=type=cache,target=/usr/local/cargo/registry \
    RUSTFLAGS="-C target-feature=-crt-static" cargo install --path .

###
#     Stage 2: postgres metrics exporter
###

FROM golang:bullseye AS builder-pgexporter

WORKDIR /opt/pgexporter

RUN git clone --depth=1 https://github.com/prometheus-community/postgres_exporter.git .

RUN make build

###
#     Stage 3: redis metrics exporter
###

# The redis exporter found at https://github.com/oliver006/redis_exporter
#
# Uses an alpine container to build the exporter itself with go.

FROM golang:1.19-alpine as builder-redisexporter

WORKDIR /opt/redis_exporter

RUN apk --no-cache add ca-certificates git && \
    git clone https://github.com/oliver006/redis_exporter.git .

# ADD . /go/src/github.com/oliver006/redis_exporter/

ARG SHA1="[no-sha]"
ARG TAG="[no-tag]"
ARG GOARCH="amd64"

RUN BUILD_DATE=$(date +%F-%T) CGO_ENABLED=0 GOOS=linux GOARCH=$GOARCH go build -o /redis_exporter \
    -ldflags  "-s -w -extldflags \"-static\" -X main.BuildVersion=$TAG -X main.BuildCommitSha=$SHA1 -X main.BuildDate=$BUILD_DATE" . && \
    /redis_exporter -version && \
    ls -la /redis_exporter

###
#     Last Stage: Final Image
###

FROM debian:bullseye-slim

COPY --from=builder-SC /opt/synapse_tools/target/release/synapse_auto_compressor /usr/local/bin/synapse_auto_compressor
COPY --from=builder-SC /opt/synapse_tools/target/release/synapse_compress_state /usr/local/bin/synapse_compress_state
COPY --from=builder-pgexporter /opt/pgexporter /usr/local/bin/postgres_exporter
COPY --from=builder-redisexporter /redis_exporter /usr/local/bin/redis_exporter
